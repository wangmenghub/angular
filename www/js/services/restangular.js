/** * Created by ID on 15/12/7. * Author:zhoudd * email:zhoudd@stark.tm */angular.module('rsc.service.rest', ['restangular'])    .factory('AccountRestAngularNoToken', function (Restangular, ENV) {        return Restangular.withConfig(function (RestangularConfigurer) {            RestangularConfigurer.setBaseUrl(ENV.api.account);        })    })    .factory('AccountRestAngular', function (Restangular, ENV,GetToken) {        return Restangular.withConfig(function (RestangularConfigurer) {            RestangularConfigurer.setDefaultHeaders({'x-access-token': GetToken});            RestangularConfigurer.setBaseUrl(ENV.api.account);        })    })    .factory('PassRestAngular', function (Restangular, ENV,GetToken) {        return Restangular.withConfig(function (RestangularConfigurer) {            RestangularConfigurer.setDefaultHeaders({'x-access-token': GetToken});            RestangularConfigurer.setBaseUrl(ENV.api.pass);        })    })    .factory('PassPayAngular', function (Restangular, ENV,GetToken) {        return Restangular.withConfig(function (RestangularConfigurer) {            RestangularConfigurer.setDefaultHeaders({"Content-Type": undefined});            RestangularConfigurer.setDefaultHeaders({'x-access-token': GetToken});            RestangularConfigurer.setBaseUrl(ENV.api.pass);        })    })    .factory('StoreRestAngular', function (Restangular, ENV,GetToken) {        return Restangular.withConfig(function (RestangularConfigurer) {            RestangularConfigurer.setDefaultHeaders({'x-access-token': GetToken});            RestangularConfigurer.setBaseUrl(ENV.api.account);        });    })    .factory('CreditRestAngular', function (Restangular, ENV,GetToken) {        return Restangular.withConfig(function (RestangularConfigurer) {            RestangularConfigurer.setDefaultHeaders({'x-access-token': GetToken});            RestangularConfigurer.setBaseUrl(ENV.api.credit);        });    })    .factory('GetToken', function (authenticationService) {        var token;        var user = authenticationService.getUserInfo();        //var user = window.sessionStorage.setItem('userInfo', window.JSON.stringify(data));        if (user) {            token = user.token;        } else {            token = '';        }        return token;    })